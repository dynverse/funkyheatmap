[{"path":"https://funkyheatmap.dynverse.org/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 funkyheatmap authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"load-data","dir":"Articles","previous_headings":"","what":"Load data","title":"Recreating the dynbenchmark figures","text":"","code":"library(funkyheatmap) library(dplyr, warn.conflicts = FALSE) library(tibble, warn.conflicts = FALSE) library(purrr, warn.conflicts = FALSE)  data(\"dynbenchmark_data\")  data <- dynbenchmark_data"},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"determine-method-grouping","dir":"Articles","previous_headings":"","what":"Determine method grouping","title":"Recreating the dynbenchmark figures","text":"","code":"row_info <-   data %>%   select(group, id) row_groups <-   data %>%   transmute(     group,     Group = case_when(       group == \"cycle\" ~ \"Cyclic methods\",       TRUE ~ paste0(stringr::str_to_title(group), \" methods\")     )   ) %>%   unique()"},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"define-column-info","dir":"Articles","previous_headings":"","what":"Define column info","title":"Recreating the dynbenchmark figures","text":"","code":"column_info <- tribble( # tribble_start   ~group,                   ~id,                                            ~name,                      ~geom,        ~palette,         ~options,   \"method_characteristic\",  \"method_name\",                                  \"\",                         \"text\",       NA,               list(hjust = 0, width = 6),   \"method_characteristic\",  \"method_priors_required_str\",                   \"Priors required\",          \"text\",       NA,               list(width = 2),   \"method_characteristic\",  \"method_wrapper_type\",                          \"Wrapper type\",             \"text\",       NA,               list(width = 2),   \"method_characteristic\",  \"method_platform\",                              \"Platform\",                 \"text\",       NA,               list(width = 2),   \"method_characteristic\",  \"method_topology_inference\",                    \"Topology inference\",       \"text\",       NA,               list(width = 2),   \"score_overall\",          \"summary_overall_overall\",                      \"Overall\",                  \"bar\",        \"overall\",        list(width = 4, legend = FALSE),   \"score_overall\",          \"benchmark_overall_overall\",                    \"Accuracy\",                 \"bar\",        \"benchmark\",      list(width = 4, legend = FALSE),   \"score_overall\",          \"scaling_pred_overall_overall\",                 \"Scalability\",              \"bar\",        \"scaling\",        list(width = 4, legend = FALSE),   \"score_overall\",          \"stability_overall_overall\",                    \"Stability\",                \"bar\",        \"stability\",      list(width = 4, legend = FALSE),   \"score_overall\",          \"qc_overall_overall\",                           \"Usability\",                \"bar\",        \"qc\",             list(width = 4, legend = FALSE),   \"score_overall\",          \"control_label\",                                \"\",                         \"text\",       NA,               list(overlay = TRUE),   \"benchmark_metric\",       \"benchmark_overall_norm_him\",                   \"Topology\",                 \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_metric\",       \"benchmark_overall_norm_F1_branches\",           \"Branch assignment\",        \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_metric\",       \"benchmark_overall_norm_correlation\",           \"Cell positions\",           \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_metric\",       \"benchmark_overall_norm_featureimp_wcor\",       \"Features\",                 \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_source\",       \"benchmark_source_real_gold\",                   \"Gold\",                     \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_source\",       \"benchmark_source_real_silver\",                 \"Silver\",                   \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_source\",       \"benchmark_source_synthetic_dyngen\",            \"dyngen\",                   \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_source\",       \"benchmark_source_synthetic_dyntoy\",            \"dyntoy\",                   \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_source\",       \"benchmark_source_synthetic_prosstt\",           \"PROSSTT\",                  \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_source\",       \"benchmark_source_synthetic_splatter\",          \"Splatter\",                 \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_cycle\",                           \"Cycle\",                    \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_linear\",                          \"Linear\",                   \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_bifurcation\",                     \"Bifurcation\",              \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_convergence\",                     \"Convergence\",              \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_multifurcation\",                  \"Multifurcation\",           \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_tree\",                            \"Tree\",                     \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_acyclic_graph\",                   \"Acyclic\",                  \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_graph\",                           \"Connected\",                \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_trajtype\",     \"benchmark_tt_disconnected_graph\",              \"Disconnected\",             \"funkyrect\",  \"benchmark\",      lst(),   \"benchmark_execution\",    \"benchmark_overall_pct_errored_str\",            \"% Errored\",                \"text\",       NA,               lst(hjust = 1),   \"benchmark_execution\",    \"benchmark_overall_error_reasons\",              \"Reason\",                   \"pie\",        \"error_reasons\",  lst(),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells1m_features100\",   \"1m \\u00D7 100\",            \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells1m_features100\",   \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_timestr_cells1m_features100\", overlay = TRUE, size = 3, scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells100k_features1k\",  \"100k \\u00D7 1k\",           \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells100k_features1k\",  \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_timestr_cells100k_features1k\", overlay = TRUE, size = 3, scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells10k_features10k\",  \"10k \\u00D7 10k\",           \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells10k_features10k\",  \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_timestr_cells10k_features10k\", overlay = TRUE, size = 3, scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells1k_features100k\",  \"1k \\u00D7 100k\",           \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells1k_features100k\",  \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_timestr_cells1k_features100k\", overlay = TRUE, size = 3, scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells100_features1m\",   \"100 \\u00D7 1m\",            \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predtime\",       \"scaling_pred_scoretime_cells100_features1m\",   \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_timestr_cells100_features1m\", overlay = TRUE, size = 3, scale = FALSE),   \"scaling_predtime\",       \"benchmark_overall_time_predcor_str\",           \"Cor. pred. vs. real\",      \"text\",       NA,               lst(size = 3),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells1m_features100\",    \"1m \\u00D7 100\",            \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells1m_features100\",    \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_memstr_cells1m_features100\", overlay = TRUE, size = 2, scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells100k_features1k\",   \"100k \\u00D7 1k\",           \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells100k_features1k\",   \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_memstr_cells100k_features1k\", overlay = TRUE, size = 2, scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells10k_features10k\",   \"10k \\u00D7 10k\",           \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells10k_features10k\",   \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_memstr_cells10k_features10k\", overlay = TRUE, size = 2, scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells1k_features100k\",   \"1k \\u00D7 100k\",           \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells1k_features100k\",   \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_memstr_cells1k_features100k\", overlay = TRUE, size = 2, scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells100_features1m\",    \"100 \\u00D7 1m\",            \"rect\",       \"scaling\",        lst(scale = FALSE),   \"scaling_predmem\",        \"scaling_pred_scoremem_cells100_features1m\",    \"\",                         \"text\",       \"white6black4\",   lst(label = \"scaling_pred_memstr_cells100_features1m\", overlay = TRUE, size = 2, scale = FALSE),   \"scaling_predmem\",        \"benchmark_overall_mem_predcor_str\",            \"Cor. pred. vs. real\",      \"text\",       NA,               lst(size = 3),   \"stability\",              \"stability_him\",                                \"Topology\",                 \"funkyrect\",  \"stability\",      lst(),   \"stability\",              \"stability_F1_branches\",                        \"Branch assignment\",        \"funkyrect\",  \"stability\",      lst(),   \"stability\",              \"stability_correlation\",                        \"Cell positions\",           \"funkyrect\",  \"stability\",      lst(),   \"stability\",              \"stability_featureimp_wcor\",                    \"Features\",                 \"funkyrect\",  \"stability\",      lst(),   \"qc_category\",            \"qc_cat_availability\",                          \"Availability\",             \"funkyrect\",  \"qc\",             lst(),   \"qc_category\",            \"qc_cat_behaviour\",                             \"Behaviour\",                \"funkyrect\",  \"qc\",             lst(),   \"qc_category\",            \"qc_cat_code_assurance\",                        \"Code assurance\",           \"funkyrect\",  \"qc\",             lst(),   \"qc_category\",            \"qc_cat_code_quality\",                          \"Code quality\",             \"funkyrect\",  \"qc\",             lst(),   \"qc_category\",            \"qc_cat_documentation\",                         \"Documentation\",            \"funkyrect\",  \"qc\",             lst(),   \"qc_category\",            \"qc_cat_paper\",                                 \"Paper\",                    \"funkyrect\",  \"qc\",             lst(),   \"qc_category\",            \"control_label\",                                \"\",                         \"text\",       NA,               list(overlay = TRUE, width = -6) )"},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"define-column-groups","dir":"Articles","previous_headings":"","what":"Define column groups","title":"Recreating the dynbenchmark figures","text":"","code":"column_groups <- tribble(   ~Experiment,    ~Category,                                      ~group,                   ~palette,   \"Method\",       \"\\n\",                                           \"method_characteristic\",  \"overall\",   \"Summary\",      \"Aggregated scores per experiment\",             \"score_overall\",          \"overall\",   \"Accuracy\",     \"Per metric\",                                   \"benchmark_metric\",       \"benchmark\",   \"Accuracy\",     \"Per dataset source\",                           \"benchmark_source\",       \"benchmark\",   \"Accuracy\",     \"Per trajectory type\",                          \"benchmark_trajtype\",     \"benchmark\",   \"Accuracy\",     \"Errors\",                                       \"benchmark_execution\",    \"benchmark\",   \"Scalability\",  \"Predicted time\\n(#cells \\u00D7 #features)\",    \"scaling_predtime\",       \"scaling\",   \"Scalability\",  \"Predicted memory\\n(#cells \\u00D7 #features)\",  \"scaling_predmem\",        \"scaling\",   \"Stability\",    \"Similarity\\nbetween runs\",                     \"stability\",              \"stability\",   \"Usability\",    \"Quality of\\nsoftware and paper\",               \"qc_category\",            \"qc\" )"},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"determine-palettes","dir":"Articles","previous_headings":"","what":"Determine palettes","title":"Recreating the dynbenchmark figures","text":"","code":"error_reasons <- tibble(   name = c(\"pct_memory_limit\", \"pct_time_limit\", \"pct_execution_error\", \"pct_method_error\"),   label = c(\"Memory limit exceeded\", \"Time limit exceeded\", \"Execution error\", \"Method error\"),   colour = RColorBrewer::brewer.pal(length(name), \"Set3\") )  palettes <- tribble(   ~palette,             ~colours,   \"overall\",            grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Greys\")[-1]))(101),   \"benchmark\",          grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Blues\") %>% c(\"#011636\")))(101),   \"scaling\",            grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Reds\")[-8:-9]))(101),   \"stability\",          grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"YlOrBr\")[-7:-9]))(101),   \"qc\",                 grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Greens\")[-1] %>% c(\"#00250f\")))(101),   \"error_reasons\",      error_reasons %>% select(label, colour) %>% deframe(),   \"white6black4\",       c(rep(\"white\", 3), rep(\"black\", 7))# ,   # \"column_annotation\",  c(overall = \"#555555\", benchmark = \"#4292c6\", scaling = \"#f6483a\", stability = \"#fe9929\", qc = \"#41ab5d\") )"},{"path":"https://funkyheatmap.dynverse.org/articles/dynbenchmark.html","id":"generate-funky-heatmap","dir":"Articles","previous_headings":"","what":"Generate funky heatmap","title":"Recreating the dynbenchmark figures","text":"funkyheatmap automatically recommends width height generated plot. save plot, run:","code":"g <- funky_heatmap(   data = data,   column_info = column_info,   column_groups = column_groups,   row_info = row_info,   row_groups = row_groups,   palettes = palettes,   col_annot_offset = 3.2 ) g #> Warning: Removed 17 rows containing missing values (`geom_rect()`). #> Warning: Removed 1 rows containing missing values (`geom_text()`). ggsave(\"path_to_plot.pdf\", g, device = cairo_pdf, width = g$width, height = g$height)"},{"path":"https://funkyheatmap.dynverse.org/articles/executable.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"Standalone executable","text":"order work, need Docker Bash installed (nothing else).","code":"wget https://github.com/dynverse/funkyheatmap/releases/latest/download/executable.zip unzip executable.zip -d funky_heatmap"},{"path":"https://funkyheatmap.dynverse.org/articles/executable.html","id":"view-help","dir":"Articles","previous_headings":"","what":"View help","title":"Standalone executable","text":"Run --help get information arguments funky heatmap.","code":"./funky_heatmap --help"},{"path":"https://funkyheatmap.dynverse.org/articles/executable.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Standalone executable","text":"also processed mtcars dataset stored tsv file. generate plot , use following commands:","code":"./funky_heatmap --data funky_heatmap/example_data.tsv --output plot.pdf ℹ Could not find column 'id' in data. Using rownames as 'id'. ℹ No column info was provided, assuming all columns in `data` are to be plotted. ℹ Column info did not contain column `name`, using `id` to generate it. ℹ Column info did not contain information on which columns to plot, inferring from `data` types. ℹ Column info did not contain group information, assuming columns are ungrouped. ℹ Column info did not contain a column called 'palette', generating palettes based on the 'geom' column. ℹ Column info did not contain a column called 'options', generating ptions based on the 'geom' column. ℹ No row info was provided, assuming all rows in `data` are to be plotted. ℹ Row info did not contain group information, assuming rows are ungrouped. ℹ No palettes were provided, trying to automatically assign palettes. ℹ Palette named 'numerical_palette' was not defined. Assuming palette is numerical. Automatically selected palette 'Blues'."},{"path":"https://funkyheatmap.dynverse.org/articles/executable.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More information","title":"Standalone executable","text":"See funkyheatmap home page information documentation.","code":""},{"path":"https://funkyheatmap.dynverse.org/articles/mtcars.html","id":"column-info","dir":"Articles","previous_headings":"","what":"Column info","title":"Demo with mtcars","text":"Define column groups","code":"column_info <- tribble(   ~id,     ~group,         ~name,                      ~geom,        ~palette,    ~options,   \"id\",    NA,             \"\",                         \"text\",       NA,          list(hjust = 0, width = 6),   \"mpg\",   \"overall\",      \"Miles / gallon\",           \"bar\",        \"palette1\",  list(width = 4, legend = FALSE),   \"cyl\",   \"overall\",      \"Number of cylinders\",      \"bar\",        \"palette2\",  list(width = 4, legend = FALSE),   \"disp\",  \"group1\",       \"Displacement (cu.in.)\",    \"funkyrect\",  \"palette1\",  lst(),   \"hp\",    \"group1\",       \"Gross horsepower\",         \"funkyrect\",  \"palette1\",  lst(),   \"drat\",  \"group1\",       \"Rear axle ratio\",          \"funkyrect\",  \"palette1\",  lst(),   \"wt\",    \"group1\",       \"Weight (1000 lbs)\",        \"funkyrect\",  \"palette1\",  lst(),   \"qsec\",  \"group2\",       \"1/4 mile time\",            \"circle\",     \"palette2\",  lst(),   \"vs\",    \"group2\",       \"Engine\",                   \"circle\",     \"palette2\",  lst(),   \"am\",    \"group2\",       \"Transmission\",             \"circle\",     \"palette2\",  lst(),   \"gear\",  \"group2\",       \"# Forward gears\",          \"circle\",     \"palette2\",  lst(),   \"carb\",  \"group2\",       \"# Carburetors\",            \"circle\",     \"palette2\",  lst() ) column_groups <- tribble( # tribble_start   ~Category,  ~group,         ~palette,   \"Overall\",  \"overall\",      \"overall\",   \"Group 1\",  \"group1\",       \"palette1\",   \"Group 2\",  \"group2\",       \"palette2\" ) # tribble_end"},{"path":"https://funkyheatmap.dynverse.org/articles/mtcars.html","id":"row-info","dir":"Articles","previous_headings":"","what":"Row info","title":"Demo with mtcars","text":"Determine method grouping","code":"row_info <- data %>% transmute(id, group = \"test\") row_groups <- tibble(Group = \"Test\", group = \"test\")"},{"path":"https://funkyheatmap.dynverse.org/articles/mtcars.html","id":"palettes","dir":"Articles","previous_headings":"","what":"Palettes","title":"Demo with mtcars","text":"Determine palettes","code":"palettes <- tribble(   ~palette,             ~colours,   \"overall\",            grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Greys\")[-1]))(101),   \"palette1\",           grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Blues\") %>% c(\"#011636\")))(101),   \"palette2\",           grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Reds\")[-8:-9]))(101) )"},{"path":"https://funkyheatmap.dynverse.org/articles/mtcars.html","id":"funky-heatmap","dir":"Articles","previous_headings":"","what":"Funky heatmap","title":"Demo with mtcars","text":"Generate funky heatmap  funkyheatmap automatically recommends width height generated plot. save plot, run:","code":"g <- funky_heatmap(   data = data,   column_info = column_info,   column_groups = column_groups,   row_info = row_info,   row_groups = row_groups,   palettes = palettes,   expand = list(xmax = 4) ) g ggsave(\"path_to_plot.pdf\", g, device = cairo_pdf, width = g$width, height = g$height)"},{"path":"https://funkyheatmap.dynverse.org/articles/nextflow.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"Nextflow module","text":"order work, need Docker Bash installed (nothing else).","code":"wget https://github.com/dynverse/funkyheatmap/releases/latest/download/nextflow.zip unzip nextflow.zip -d funky_heatmap"},{"path":"https://funkyheatmap.dynverse.org/articles/nextflow.html","id":"view-help","dir":"Articles","previous_headings":"","what":"View help","title":"Nextflow module","text":"Run --help get information arguments funky heatmap.","code":"nextflow run funky_heatmap/main.nf --help"},{"path":"https://funkyheatmap.dynverse.org/articles/nextflow.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Nextflow module","text":"also processed mtcars dataset stored tsv file. generate plot , use following commands:","code":"nextflow run funky_heatmap/main.nf \\   --data funky_heatmap/example_data.tsv \\   --output plot.pdf \\   --publish_dir . \\   -profile docker"},{"path":"https://funkyheatmap.dynverse.org/articles/nextflow.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More information","title":"Nextflow module","text":"See funkyheatmap home page information documentation.","code":""},{"path":"https://funkyheatmap.dynverse.org/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robrecht Cannoodt. Author, maintainer.            rcannood Wouter Saelens. Author.            zouter","code":""},{"path":"https://funkyheatmap.dynverse.org/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saelens, W., Cannoodt, R., Todorov, H. Saeys, Y. comparison single-cell trajectory inference methods. Nat Biotechnol 37, 547–554 (2019). https://doi.org/10.1038/s41587-019-0071-9 Cannoodt R. Saelens W., funkyheatmap: Generating Funky Heatmaps Data Frames, Progress, 2023.","code":"@Article{,   author = {Robrecht Cannoodt and Wouter Saelens and Helena Todorov and Yvan Saeys},   title = {A comparison of single-cell trajectory inference methods},   journal = {Nature Biotechnology},   year = {2019},   month = {4},   doi = {10.1038/s41587-019-0071-9},   url = {https://doi.org/10.1038/s41587-019-0071-9}, } @Article{,   author = {Robrecht Cannoodt and Wouter Saelens},   title = {funkyheatmap: Generating Funky Heatmaps for Data Frames},   journal = {In Progress},   year = {2023}, }"},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"funkyheatmap-generating-funky-heatmaps-for-data-frames","dir":"","previous_headings":"","what":"Generating Funky Heatmaps for Data Frames","title":"Generating Funky Heatmaps for Data Frames","text":"funkyheatmap allows generating heatmap-like visualisations benchmark data frames. Funky heatmaps can fine-tuned providing annotations columns rows, allows assigning multiple palettes geometries grouping rows columns together categories.","code":""},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Generating Funky Heatmaps for Data Frames","text":"can install funkyheatmap like : can also download funkyheatmap standalone executable Nextflow pipeline.","code":"install.packages(\"funkyheatmap\")"},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Generating Funky Heatmaps for Data Frames","text":"Let’s use mtcars dataset example funky heatmap looks like. can visualise dataset follows.","code":"library(funkyheatmap) library(dplyr, warn.conflicts = FALSE) library(tibble, warn.conflicts = FALSE)  data(\"mtcars\") funky_heatmap(mtcars)"},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"customising-the-plot","dir":"","previous_headings":"","what":"Customising the plot","title":"Generating Funky Heatmaps for Data Frames","text":"However, plot can look much better provide additional metadata rows columns. See information can customise.","code":"data <- mtcars %>%   rownames_to_column(\"id\") %>%   arrange(desc(mpg))  column_info <- tribble(   ~id,     ~group,         ~name,                      ~geom,        ~palette,    ~options,   \"id\",    \"\",             \"\",                         \"text\",       NA,          list(hjust = 0, width = 6),   \"mpg\",   \"overall\",      \"Miles / gallon\",           \"bar\",        \"palette1\",  list(width = 4, legend = FALSE),   \"cyl\",   \"overall\",      \"Number of cylinders\",      \"bar\",        \"palette2\",  list(width = 4, legend = FALSE),   \"disp\",  \"group1\",       \"Displacement (cu.in.)\",    \"funkyrect\",  \"palette1\",  lst(),   \"hp\",    \"group1\",       \"Gross horsepower\",         \"funkyrect\",  \"palette1\",  lst(),   \"drat\",  \"group1\",       \"Rear axle ratio\",          \"funkyrect\",  \"palette1\",  lst(),   \"wt\",    \"group1\",       \"Weight (1000 lbs)\",        \"funkyrect\",  \"palette1\",  lst(),   \"qsec\",  \"group2\",       \"1/4 mile time\",            \"circle\",     \"palette2\",  lst(),   \"vs\",    \"group2\",       \"Engine\",                   \"circle\",     \"palette2\",  lst(),   \"am\",    \"group2\",       \"Transmission\",             \"circle\",     \"palette2\",  lst(),   \"gear\",  \"group2\",       \"# Forward gears\",          \"circle\",     \"palette2\",  lst(),   \"carb\",  \"group2\",       \"# Carburetors\",            \"circle\",     \"palette2\",  lst() ) funky_heatmap(data, column_info = column_info, expand = list(xmax = 4))"},{"path":"https://funkyheatmap.dynverse.org/index.html","id":"more-information","dir":"","previous_headings":"","what":"More information","title":"Generating Funky Heatmaps for Data Frames","text":"reference documentation funky_heatmap() details exact formats annotation object can pass . Check vignette vignette(\"mtcars\", \"funkyheatmap\") information customize visualisation. vignette(\"dynbenchmark\", \"funkyheatmap\") use funkyheatmap regenerate figures Saelens et al. (2019) doi:10.1038/s41587-019-0071-9. used Viash wrap funkyheatmap::funky_heatmap() function standalone executable Nextflow module.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/dynbenchmark_data.html","id":null,"dir":"Reference","previous_headings":"","what":"The results data frame from dynbenchmark. — dynbenchmark_data","title":"The results data frame from dynbenchmark. — dynbenchmark_data","text":": add citation","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/dynbenchmark_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The results data frame from dynbenchmark. — dynbenchmark_data","text":"","code":"dynbenchmark_data"},{"path":"https://funkyheatmap.dynverse.org/reference/dynbenchmark_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The results data frame from dynbenchmark. — dynbenchmark_data","text":"object class tbl_df (inherits tbl, data.frame) 51 rows 159 columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a funky heatmaps for benchmarks — funky_heatmap","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"Allows generating heatmap-like visualisations benchmark data frames. Funky heatmaps can fine-tuned providing annotations columns rows, allows assigning multiple palettes geometries grouping rows columns together categories.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"","code":"funky_heatmap(   data,   column_info = NULL,   row_info = NULL,   column_groups = NULL,   row_groups = NULL,   palettes = NULL,   scale_column = TRUE,   add_abc = TRUE,   col_annot_offset = 3,   row_annot_offset = 0.5,   removed_entries = NULL,   expand = c(xmin = 0, xmax = 2, ymin = 0, ymax = 0) )"},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"data data frame items row features columns. Must contain one column named \"id\". column_info data frame describing columns data plot. data frame contain following columns: id (character): corresponding column name data. name (character): label column. NA \"\", label plotted. column missing, id used generate name column. geom (character): geom column. Must one : \"funkyrect\", \"circle\", \"rect\", \"bar\", \"pie\", \"text\". \"text\", corresponding column data must character. \"pie\", column must list named numeric vectors. geoms, column must numeric. group (character): grouping id column, must match column_groups$group. column missing values NA, columns assumed grouped. palette (character): palette colour geom . value matching value palettes$palette. options (list): Column specific options. content list depend geom. Options : width: Custom width column (default: 1). overlay: Whether overlay column previous column. , width column inherited. legend: Whether add legend column. hjust, vjust, size: see ggplot2::geom_text. label: column use label (geom = \"text\"). hjust: Horizontal alignment bar, must [0,1] (geom = \"bar\"). row_info data frame describing rows data. data contain two columns: id (character): Corresponds column data$id. group (character): group row. NA, rows split groups. column_groups data frame describing group columns column_info. Can consist following columns: group (character): corresponding group column_info$group. palette (character, optional): palette used colour column group backgrounds. level1 (character): label highest level. level2 (character, optional): label middle level. level3 (character, optional): label lowest level (recommended). row_groups data frame describing group rows row_info. Can consist following columns: group (character): corresponding group row_info$group. level1 (character): label highest level. level2 (character, optional): label middle level. level3 (character, optional): label lowest level (recommended). palettes named list palettes. entry column_info$palette entry object. entry missing, type column inferred (categorical numerical) one default palettes applied. Alternatively, name one standard palette names can used: numerical: \"Greys\", \"Blues\", \"Reds\", \"YlOrBr\", \"Greens\" categorical: \"Set3\", \"Set1\", \"Set2\", \"Dark2\" scale_column Whether apply min-max scaling numerical column. add_abc Whether add subfigure labels different columns groups. col_annot_offset much column annotation offset . row_annot_offset much column annotation offset . removed_entries methods show rows. Missing methods replaced \"shown\" label. expand list directions expand plot .","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"ggplot. .$width .$height suggested dimensions storing plot ggsave().","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funky_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a funky heatmaps for benchmarks — funky_heatmap","text":"","code":"library(dplyr, warn.conflicts = FALSE) library(tibble, warn.conflicts = FALSE)  data(\"mtcars\")  data <- mtcars %>%   rownames_to_column(\"id\")"},{"path":"https://funkyheatmap.dynverse.org/reference/funkyheatmap-package.html","id":null,"dir":"Reference","previous_headings":"","what":"funkyheatmap: Generating Funky Heatmaps for Data Frames — funkyheatmap-package","title":"funkyheatmap: Generating Funky Heatmaps for Data Frames — funkyheatmap-package","text":"Allows generating heatmap-like visualisations benchmark data frames. Funky heatmaps can fine-tuned providing annotations columns rows, allows assigning multiple palettes geometries grouping rows columns together categories. Saelens et al. (2019) doi:10.1038/s41587-019-0071-9 . Allows generating heatmap-likes visualisations benchmark data frames. Funky heatmaps can fine-tuned providing annotations columns rows, allows assigning multiple palettes geometries grouping rows columns together categories.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/funkyheatmap-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"funkyheatmap: Generating Funky Heatmaps for Data Frames — funkyheatmap-package","text":"package heavily depends functions provided ggplot2 ggforce.","code":""},{"path":[]},{"path":"https://funkyheatmap.dynverse.org/reference/funkyheatmap-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"funkyheatmap: Generating Funky Heatmaps for Data Frames — funkyheatmap-package","text":"Maintainer: Robrecht Cannoodt rcannood@gmail.com (ORCID) (rcannood) Authors: Wouter Saelens wouter.saelens@gmail.com (ORCID) (zouter)","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the column groups object — verify_column_groups","title":"Verify the integrity of the column groups object — verify_column_groups","text":"Verify integrity column groups object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the column groups object — verify_column_groups","text":"","code":"verify_column_groups(column_groups, column_info)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the column groups object — verify_column_groups","text":"column_groups data frame describing group columns column_info. Can consist following columns: group (character): corresponding group column_info$group. palette (character, optional): palette used colour column group backgrounds. level1 (character): label highest level. level2 (character, optional): label middle level. level3 (character, optional): label lowest level (recommended). column_info data frame describing columns data plot. data frame contain following columns: id (character): corresponding column name data. name (character): label column. NA \"\", label plotted. column missing, id used generate name column. geom (character): geom column. Must one : \"funkyrect\", \"circle\", \"rect\", \"bar\", \"pie\", \"text\". \"text\", corresponding column data must character. \"pie\", column must list named numeric vectors. geoms, column must numeric. group (character): grouping id column, must match column_groups$group. column missing values NA, columns assumed grouped. palette (character): palette colour geom . value matching value palettes$palette. options (list): Column specific options. content list depend geom. Options : width: Custom width column (default: 1). overlay: Whether overlay column previous column. , width column inherited. legend: Whether add legend column. hjust, vjust, size: see ggplot2::geom_text. label: column use label (geom = \"text\"). hjust: Horizontal alignment bar, must [0,1] (geom = \"bar\").","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the column groups object — verify_column_groups","text":"column groups object expected columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the column groups object — verify_column_groups","text":"","code":"library(tibble) column_groups <- tribble(   ~group, ~level1,   \"foo\", \"Foo\",   \"bar\", \"Bar\" ) column_info <- tribble(   ~id, ~geom, ~group,   \"name\", \"text\", NA_character_,   \"foo1\", \"funkyrect\", \"foo\",   \"foo2\", \"funkyrect\", \"foo\",   \"bar1\", \"funkyrect\", \"bar\",   \"bar2\", \"funkyrect\", \"bar\" ) verify_column_groups(column_groups, column_info) #> ℹ Column groups did not contain a column called 'palette'. Assuming no colour scales need to be used. #> # A tibble: 2 × 3 #>   group level1 palette #>   <chr> <chr>  <chr>   #> 1 foo   Foo    NA      #> 2 bar   Bar    NA"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the column info object — verify_column_info","title":"Verify the integrity of the column info object — verify_column_info","text":"Verify integrity column info object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the column info object — verify_column_info","text":"","code":"verify_column_info(column_info, data)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the column info object — verify_column_info","text":"column_info data frame describing columns data plot. data frame contain following columns: id (character): corresponding column name data. name (character): label column. NA \"\", label plotted. column missing, id used generate name column. geom (character): geom column. Must one : \"funkyrect\", \"circle\", \"rect\", \"bar\", \"pie\", \"text\". \"text\", corresponding column data must character. \"pie\", column must list named numeric vectors. geoms, column must numeric. group (character): grouping id column, must match column_groups$group. column missing values NA, columns assumed grouped. palette (character): palette colour geom . value matching value palettes$palette. options (list): Column specific options. content list depend geom. Options : width: Custom width column (default: 1). overlay: Whether overlay column previous column. , width column inherited. legend: Whether add legend column. hjust, vjust, size: see ggplot2::geom_text. label: column use label (geom = \"text\"). hjust: Horizontal alignment bar, must [0,1] (geom = \"bar\"). data data frame items row features columns. Must contain one column named \"id\".","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the column info object — verify_column_info","text":"column info object expected columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_column_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the column info object — verify_column_info","text":"","code":"library(tibble) data <- tribble(   ~id, ~name, ~x, ~y,   \"foo\", \"Foo\", 0.5, 0.7,   \"bar\", \"Bar\", 1.0, 0.1 ) column_info <- tribble(   ~id, ~geom,   \"name\", \"text\",   \"x\", \"funkyrect\",   \"y\", \"funkyrect\" ) verify_column_info(column_info, data) #> ℹ Column info did not contain column `name`, using `id` to generate it. #> ℹ Column info did not contain group information, assuming columns are ungrouped. #> ℹ Column info did not contain a column called 'palette', generating palettes based on the 'geom' column. #> ℹ Column info did not contain a column called 'options', generating options based on the 'geom' column. #> # A tibble: 3 × 6 #>   id    geom      name  group palette           options          #>   <chr> <chr>     <chr> <chr> <chr>             <list>           #> 1 name  text      Name  NA    NA                <named list [1]> #> 2 x     funkyrect X     NA    numerical_palette <list [0]>       #> 3 y     funkyrect Y     NA    numerical_palette <list [0]>"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the data object — verify_data","title":"Verify the integrity of the data object — verify_data","text":"Verify integrity data object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the data object — verify_data","text":"","code":"verify_data(data)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the data object — verify_data","text":"data data frame items row features columns. Must contain one column named \"id\".","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the data object — verify_data","text":"verified data object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the data object — verify_data","text":"","code":"library(tibble) data <- tribble(   ~id, ~name, ~x, ~y,   \"foo\", \"Foo\", 0.5, 0.7,   \"bar\", \"Bar\", 1.0, 0.1 ) verify_data(data) #> # A tibble: 2 × 4 #>   id    name      x     y #>   <chr> <chr> <dbl> <dbl> #> 1 foo   Foo     0.5   0.7 #> 2 bar   Bar     1     0.1"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the palettes object — verify_palettes","title":"Verify the integrity of the palettes object — verify_palettes","text":"Verify integrity palettes object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the palettes object — verify_palettes","text":"","code":"verify_palettes(palettes, column_info, data)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the palettes object — verify_palettes","text":"palettes named list palettes. entry column_info$palette entry object. entry missing, type column inferred (categorical numerical) one default palettes applied. Alternatively, name one standard palette names can used: numerical: \"Greys\", \"Blues\", \"Reds\", \"YlOrBr\", \"Greens\" categorical: \"Set3\", \"Set1\", \"Set2\", \"Dark2\" column_info data frame describing columns data plot. data frame contain following columns: id (character): corresponding column name data. name (character): label column. NA \"\", label plotted. column missing, id used generate name column. geom (character): geom column. Must one : \"funkyrect\", \"circle\", \"rect\", \"bar\", \"pie\", \"text\". \"text\", corresponding column data must character. \"pie\", column must list named numeric vectors. geoms, column must numeric. group (character): grouping id column, must match column_groups$group. column missing values NA, columns assumed grouped. palette (character): palette colour geom . value matching value palettes$palette. options (list): Column specific options. content list depend geom. Options : width: Custom width column (default: 1). overlay: Whether overlay column previous column. , width column inherited. legend: Whether add legend column. hjust, vjust, size: see ggplot2::geom_text. label: column use label (geom = \"text\"). hjust: Horizontal alignment bar, must [0,1] (geom = \"bar\"). data data frame items row features columns. Must contain one column named \"id\".","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the palettes object — verify_palettes","text":"palettes object expected columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the palettes object — verify_palettes","text":"","code":"library(tibble) library(grDevices) library(RColorBrewer)  # explicit form data <- tribble(   ~id, ~name, ~x, ~y,   \"foo\", \"Foo\", 0.5, 0.7,   \"bar\", \"Bar\", 1.0, 0.1 ) column_info <- tribble(   ~id, ~geom, ~palette,   \"name\", \"text\", NA,   \"foo\", \"funkyrect\", \"pal1\",   \"bar\", \"funkyrect\", \"pal2\" ) palettes <- list(   pal1 = rev(brewer.pal(9, \"Greys\")[-1]),   pal2 = rev(brewer.pal(9, \"Reds\")[-8:-9]) ) verify_palettes(palettes, column_info, data) #> $pal1 #> [1] \"#000000\" \"#252525\" \"#525252\" \"#737373\" \"#969696\" \"#BDBDBD\" \"#D9D9D9\" #> [8] \"#F0F0F0\" #>  #> $pal2 #> [1] \"#CB181D\" \"#EF3B2C\" \"#FB6A4A\" \"#FC9272\" \"#FCBBA1\" \"#FEE0D2\" \"#FFF5F0\" #>   # implicit palettes palettes <- list(   pal1 = \"Greys\",   pal2 = \"Reds\" ) verify_palettes(palettes, column_info, data) #> $pal1 #>   [1] \"#000000\" \"#020202\" \"#050505\" \"#070707\" \"#0A0A0A\" \"#0C0C0C\" \"#0F0F0F\" #>   [8] \"#121212\" \"#141414\" \"#171717\" \"#191919\" \"#1C1C1C\" \"#1F1F1F\" \"#212121\" #>  [15] \"#242424\" \"#272727\" \"#2A2A2A\" \"#2D2D2D\" \"#303030\" \"#333333\" \"#373737\" #>  [22] \"#3A3A3A\" \"#3D3D3D\" \"#404040\" \"#434343\" \"#464646\" \"#494949\" \"#4D4D4D\" #>  [29] \"#505050\" \"#525252\" \"#555555\" \"#575757\" \"#595959\" \"#5C5C5C\" \"#5E5E5E\" #>  [36] \"#606060\" \"#636363\" \"#656565\" \"#676767\" \"#6A6A6A\" \"#6C6C6C\" \"#6E6E6E\" #>  [43] \"#717171\" \"#737373\" \"#757575\" \"#787878\" \"#7A7A7A\" \"#7D7D7D\" \"#7F7F7F\" #>  [50] \"#828282\" \"#848484\" \"#868686\" \"#898989\" \"#8B8B8B\" \"#8E8E8E\" \"#909090\" #>  [57] \"#939393\" \"#959595\" \"#989898\" \"#9B9B9B\" \"#9D9D9D\" \"#A0A0A0\" \"#A3A3A3\" #>  [64] \"#A5A5A5\" \"#A8A8A8\" \"#ABABAB\" \"#AEAEAE\" \"#B0B0B0\" \"#B3B3B3\" \"#B6B6B6\" #>  [71] \"#B9B9B9\" \"#BBBBBB\" \"#BEBEBE\" \"#C0C0C0\" \"#C2C2C2\" \"#C4C4C4\" \"#C5C5C5\" #>  [78] \"#C7C7C7\" \"#C9C9C9\" \"#CBCBCB\" \"#CDCDCD\" \"#CFCFCF\" \"#D1D1D1\" \"#D3D3D3\" #>  [85] \"#D5D5D5\" \"#D7D7D7\" \"#D9D9D9\" \"#DBDBDB\" \"#DCDCDC\" \"#DEDEDE\" \"#DFDFDF\" #>  [92] \"#E1E1E1\" \"#E3E3E3\" \"#E4E4E4\" \"#E6E6E6\" \"#E7E7E7\" \"#E9E9E9\" \"#EBEBEB\" #>  [99] \"#ECECEC\" \"#EEEEEE\" \"#F0F0F0\" #>  #> $pal2 #>   [1] \"#CB181D\" \"#CD1A1D\" \"#CF1C1E\" \"#D11E1F\" \"#D32020\" \"#D52221\" \"#D72422\" #>   [8] \"#DA2623\" \"#DC2824\" \"#DE2A25\" \"#E02D26\" \"#E22F26\" \"#E43127\" \"#E73328\" #>  [15] \"#E93529\" \"#EB372A\" \"#ED392B\" \"#EF3B2C\" \"#EF3E2E\" \"#F04130\" \"#F14432\" #>  [22] \"#F24733\" \"#F24A35\" \"#F34C37\" \"#F44F39\" \"#F5523B\" \"#F5553C\" \"#F6583E\" #>  [29] \"#F75A40\" \"#F75D42\" \"#F86044\" \"#F96345\" \"#FA6647\" \"#FA6949\" \"#FB6B4B\" #>  [36] \"#FB6E4E\" \"#FB7050\" \"#FB7252\" \"#FB7555\" \"#FB7757\" \"#FB7A5A\" \"#FB7C5C\" #>  [43] \"#FB7E5E\" \"#FB8161\" \"#FB8363\" \"#FB8666\" \"#FB8868\" \"#FB8A6A\" \"#FB8D6D\" #>  [50] \"#FB8F6F\" \"#FC9272\" \"#FC9474\" \"#FC9677\" \"#FC997A\" \"#FC9B7D\" \"#FC9E80\" #>  [57] \"#FCA082\" \"#FCA385\" \"#FCA588\" \"#FCA88B\" \"#FCAA8E\" \"#FCAD91\" \"#FCAF93\" #>  [64] \"#FCB196\" \"#FCB499\" \"#FCB69C\" \"#FCB99F\" \"#FCBBA1\" \"#FCBDA4\" \"#FCC0A7\" #>  [71] \"#FCC2AA\" \"#FCC4AD\" \"#FCC6B0\" \"#FCC9B3\" \"#FCCBB6\" \"#FDCDB9\" \"#FDCFBC\" #>  [78] \"#FDD1BF\" \"#FDD4C2\" \"#FDD6C5\" \"#FDD8C8\" \"#FDDACB\" \"#FDDDCE\" \"#FDDFD1\" #>  [85] \"#FEE0D3\" \"#FEE2D5\" \"#FEE3D6\" \"#FEE4D8\" \"#FEE5DA\" \"#FEE7DC\" \"#FEE8DE\" #>  [92] \"#FEE9DF\" \"#FEEAE1\" \"#FEECE3\" \"#FEEDE5\" \"#FEEEE7\" \"#FEEFE8\" \"#FEF1EA\" #>  [99] \"#FEF2EC\" \"#FEF3EE\" \"#FFF5F0\" #>   # passing a tibble should also work (for backwards compatibility) palettes <- tribble(   ~palette, ~colours,   \"pal1\", rev(brewer.pal(9, \"Greys\")[-1]),   \"pal2\", rev(brewer.pal(9, \"Reds\")[-8:-9]) ) verify_palettes(palettes, column_info, data) #> $pal1 #> [1] \"#000000\" \"#252525\" \"#525252\" \"#737373\" \"#969696\" \"#BDBDBD\" \"#D9D9D9\" #> [8] \"#F0F0F0\" #>  #> $pal2 #> [1] \"#CB181D\" \"#EF3B2C\" \"#FB6A4A\" \"#FC9272\" \"#FCBBA1\" \"#FEE0D2\" \"#FFF5F0\" #>"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the row groups object — verify_row_groups","title":"Verify the integrity of the row groups object — verify_row_groups","text":"Verify integrity row groups object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the row groups object — verify_row_groups","text":"","code":"verify_row_groups(row_groups, row_info)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the row groups object — verify_row_groups","text":"row_groups data frame describing group rows row_info. Can consist following columns: group (character): corresponding group row_info$group. level1 (character): label highest level. level2 (character, optional): label middle level. level3 (character, optional): label lowest level (recommended). row_info data frame describing rows data. data contain two columns: id (character): Corresponds column data$id. group (character): group row. NA, rows split groups.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the row groups object — verify_row_groups","text":"row groups object expected rows.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the row groups object — verify_row_groups","text":"","code":"library(tibble) row_groups <- tribble(   ~group, ~level1,   \"foo\", \"Foo\",   \"bar\", \"Bar\" ) row_info <- tribble(   ~id, ~group,   \"name\", NA_character_,   \"foo1\", \"foo\",   \"foo2\", \"foo\",   \"bar1\", \"bar\",   \"bar2\", \"bar\" ) verify_row_groups(row_groups, row_info) #> # A tibble: 2 × 2 #>   group level1 #>   <chr> <chr>  #> 1 foo   Foo    #> 2 bar   Bar"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify the integrity of the row info object — verify_row_info","title":"Verify the integrity of the row info object — verify_row_info","text":"Verify integrity row info object","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify the integrity of the row info object — verify_row_info","text":"","code":"verify_row_info(row_info, data)"},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify the integrity of the row info object — verify_row_info","text":"row_info data frame describing rows data. data contain two columns: id (character): Corresponds column data$id. group (character): group row. NA, rows split groups. data data frame items row features columns. Must contain one column named \"id\".","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify the integrity of the row info object — verify_row_info","text":"row info object expected columns.","code":""},{"path":"https://funkyheatmap.dynverse.org/reference/verify_row_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify the integrity of the row info object — verify_row_info","text":"","code":"library(tibble) data <- tribble(   ~id, ~name, ~x, ~y,   \"foo1\", \"Foo1\", 0.5, 0.7,   \"foo2\", \"Foo2\", 0.5, 0.8,   \"bar1\", \"Bar1\", 1.0, 0.2,   \"bar2\", \"Bar2\", 1.0, 0.1 ) row_info <- tribble(   ~id, ~group,   \"foo1\", \"foo\",   \"foo2\", \"foo\",   \"bar1\", \"bar\",   \"bar2\", \"bar\" ) verify_row_info(row_info, data) #> # A tibble: 4 × 2 #>   id    group #>   <chr> <chr> #> 1 foo1  foo   #> 2 foo2  foo   #> 3 bar1  bar   #> 4 bar2  bar"},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"funkyheatmap-010","dir":"Changelog","previous_headings":"","what":"funkyheatmap 0.1.0","title":"funkyheatmap 0.1.0","text":"CRAN release: 2022-11-28 initial release funkyheatmap standalone package.","code":""},{"path":"https://funkyheatmap.dynverse.org/news/index.html","id":"major-changes-0-1-0","dir":"Changelog","previous_headings":"","what":"MAJOR CHANGES","title":"funkyheatmap 0.1.0","text":"Ported code funky_heatmap() dynverse/dynbenchmark. Split code different helper functions. Added verify_*() functions checking file format input objects trying provide helpful messages format correct. Added documentation, unit tests examples. Website published funkyheatmap.dynverse.org.","code":""}]
